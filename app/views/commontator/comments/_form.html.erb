<% # Clients of this partial must provide the following variables:
   # comment
   #
   # Optionally, they can also supply the following variables:
   per_page ||= nil
   thread ||= nil
   no_remote ||= false
%>

<% config = comment.thread.config %>

<% if comment.errors.any? %>
  <div class="comment_error_explanation">
    <h6><%= t "commontator.comment.errors.#{comment.id.blank? ? 'create' : 'update'}" %></h6>

    <ul>
      <% comment.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<div class="row">
<%= form_for([commontator, thread, comment],
             :remote => !no_remote)  do |f| %>

  <%= hidden_field_tag :per_page, per_page %>
  
  <div class="comment_form_field input-field col s12">
    <i class="material-icons prefix"><%= image_tag current_user.avatar,
      class: "circle", size: "36x36" %></i>
    <%= f.text_area :body, class: "materialize-textarea" %>
    <%= javascript_tag('Commontator.initMentions()') if Commontator.mentions_enabled %>
  </div>

  <div class="comment_form_actions right">
    <%= f.submit t('commontator.comment.actions.cancel'), :name => 'cancel',
      class: "btn-flat btn-small" %>
    <%= f.submit t("commontator.comment.actions.#{comment.id.blank? ? 'create' : 'update'}"), class: "btn btn-small" %>

    <%= f.button :submit, name: 'cancel', class: "btn-flat btn-small" %>
  </div>
<% end %>
</div>
